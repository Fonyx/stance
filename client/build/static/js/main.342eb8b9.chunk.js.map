{"version":3,"sources":["components/Navbar/index.jsx","components/Footer/index.jsx","pages/Home.js","pages/Profile.js","utils/auth.js","utils/mutations.js","pages/SignIn.js","pages/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["fontStyle","fontFamily","fontWeight","Navbar","Box","sx","flexGrow","AppBar","position","Toolbar","IconButton","size","edge","color","aria-label","mr","Typography","variant","component","style","Button","Footer","useState","value","setValue","BottomNavigation","showLabels","onChange","event","newValue","BottomNavigationAction","label","icon","Home","Grid","container","spacing","direction","alignItems","justifyContent","minHeight","item","xs","ButtonGroup","href","Profile","profile","className","name","token_name","decode","this","getToken","token","isTokenExpired","exp","Date","now","localStorage","removeItem","getItem","idToken","setItem","window","location","assign","reload","SIGN_IN","gql","SIGN_UP","SignIn","email","password","formState","setFormState","useMutation","login","error","data","handleChange","target","handleFormSubmit","a","preventDefault","console","log","variables","Auth","to","onSubmit","placeholder","type","cursor","message","Signup","username","signUp","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","apolloClient","ApolloClient","link","concat","cache","InMemoryCache","stanceTheme","createTheme","typography","h6","fontSize","palette","primary","main","green","secondary","orange","App","ApolloProvider","client","ThemeProvider","theme","Container","exact","path","SignUp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.342eb8b9.chunk.js","sourcesContent":["import React from 'react';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport Box from '@mui/material/Box';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Typography from '@mui/material/Typography';\r\nimport Button from '@mui/material/Button';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\n\r\nconst fontStyle = {\r\n  fontFamily: 'Saira',\r\n  fontWeight: 500\r\n}\r\n\r\nexport default function Navbar() {\r\n    return (\r\n        <Box sx={{ flexGrow: 1 }}>\r\n          <AppBar position=\"static\">\r\n            <Toolbar>\r\n              <IconButton\r\n                size=\"large\"\r\n                edge=\"start\"\r\n                color=\"inherit\"\r\n                aria-label=\"menu\"\r\n                sx={{ mr: 2 }}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }} style={fontStyle}>\r\n                News\r\n              </Typography>\r\n              <Button color=\"secondary\" variant=\"contained\">Login</Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n      </Box>\r\n      )\r\n}\r\n","import React, { useState } from 'react';\r\nimport FavoriteIcon from '@mui/icons-material/Favorite';\r\nimport RestoreIcon from '@mui/icons-material/Restore';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport {BottomNavigation, BottomNavigationAction} from '@mui/material';\r\n// import { useLocation, useHistory } from 'react-router-dom';\r\n\r\nexport default function Footer() {\r\n    // const location = useLocation();\r\n    // const history = useHistory();\r\n\r\n    const [value, setValue] = useState('home');\r\n\r\n    return (\r\n        <BottomNavigation\r\n        showLabels\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          setValue(newValue);\r\n        }}\r\n        >\r\n            <BottomNavigationAction label=\"Recents\" icon={<RestoreIcon />} />\r\n            <BottomNavigationAction label=\"Favorites\" icon={<FavoriteIcon />} />\r\n            <BottomNavigationAction label=\"Nearby\" icon={<LocationOnIcon />} />\r\n        </BottomNavigation>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {Grid} from '@mui/material'\r\nimport {ButtonGroup, Button} from '@mui/material'\r\n\r\nexport default function Home() {\r\n    return (\r\n        <Grid container spacing={2} direction=\"column\" alignItems=\"center\" justifyContent=\"center\" style={{minHeight: '60vh'}}>\r\n            <Grid item xs={12}>\r\n                <ButtonGroup variant=\"text\" aria-label=\"outlined primary button group\">\r\n                    <Button href='/signup'>Sign Up</Button>\r\n                    <Button href=\"/signin\">Sign In</Button>\r\n                </ButtonGroup>\r\n            </Grid>\r\n        </Grid>\r\n    )\r\n}\r\n","import React from 'react'\r\n// import { useParams } from 'react-router-dom';\r\n// import { useQuery } from '@apollo/client';\r\n\r\nexport default function Profile(profile) {\r\n\r\n    // const {profileId} = useParams();\r\n\r\n    // const {loading, data} = useQuery(GET_PROFILE, {\r\n    //     variables: {profileId: profileId}\r\n    // });\r\n\r\n    // const profile = data?.profile || {};\r\n\r\n    // if(loading){\r\n    //     return <div>Loading...</div>\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            <h2 className=\"card-header\">\r\n                {profile.name}'s friends have endorsed these skills...\r\n            </h2>\r\n        </div>\r\n    )\r\n}\r\n","import decode from 'jwt-decode';\r\n\r\nclass AuthService {\r\n\r\n    token_name = 'stance_user_token';\r\n\r\n    getProfile() {\r\n    return decode(this.getToken());\r\n    }\r\n\r\n    loggedIn() {\r\n    const token = this.getToken();\r\n    // If there is a token and it's not expired, return `true`\r\n    return token && !this.isTokenExpired(token) ? true : false;\r\n    }\r\n\r\n    isTokenExpired(token) {\r\n    // Decode the token to get its expiration time that was set by the server\r\n    const decoded = decode(token);\r\n    // If the expiration time is less than the current time (in seconds), the token is expired and we return `true`\r\n    if (decoded.exp < Date.now() / 1000) {\r\n        localStorage.removeItem(this.token_name);\r\n        return true;\r\n    }\r\n    // If token hasn't passed its expiration time, return `false`\r\n    return false;\r\n    }\r\n\r\n    getToken() {\r\n    return localStorage.getItem(this.token_name);\r\n    }\r\n\r\n    login(idToken) {\r\n    localStorage.setItem(this.token_name, idToken);\r\n    window.location.assign('/');\r\n    }\r\n\r\n    logout() {\r\n    localStorage.removeItem(this.token_name);\r\n    window.location.reload();\r\n    }\r\n}\r\n\r\nexport default new AuthService();\r\n","import { gql } from '@apollo/client';\r\n\r\nexport const SIGN_IN = gql`\r\n    mutation signIn(\r\n        $email: String!\r\n        $password: String!\r\n    ){\r\n        signIn(\r\n            email: $email\r\n            password: $password\r\n        ){\r\n            token\r\n            user{\r\n            _id\r\n            username\r\n            email\r\n            password\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const SIGN_UP = gql`\r\n    mutation signUp(\r\n        $username: String!\r\n        $email: String!\r\n        $password: String!\r\n    ){\r\n        signUp(\r\n        username: $username\r\n        email: $email\r\n        password: $password\r\n        ){\r\n        token\r\n        user{\r\n            _id\r\n            username\r\n            email\r\n            password\r\n        }\r\n        }\r\n    }\r\n`;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useMutation } from '@apollo/client';\r\nimport { SIGN_IN } from '../utils/mutations';\r\nimport Auth from '../utils/auth';\r\n\r\nexport default function SignIn() {\r\n\r\n    const [formState, setFormState] = useState({ email: '', password: '' });\r\n    const [login, { error, data }] = useMutation(SIGN_IN);\r\n\r\n    // update state based on form input changes\r\n    const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n        ...formState,\r\n        [name]: value,\r\n    });\r\n    };\r\n\r\n    // submit form\r\n    const handleFormSubmit = async (event) => {\r\n        event.preventDefault();\r\n        console.log(formState);\r\n        try {\r\n            const { data } = await login({\r\n                variables: { ...formState },\r\n            });\r\n\r\n            Auth.login(data.login.token);\r\n        } catch (e) {\r\n        console.error(e);\r\n        }\r\n\r\n        // clear form values\r\n        setFormState({\r\n            email: '',\r\n            password: '',\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            {data ? (\r\n              <p>\r\n                Success! You may now head{' '}\r\n                <Link to=\"/\">back to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit}>\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"******\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <button\r\n                  className=\"btn btn-block btn-primary\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useMutation } from '@apollo/client';\r\nimport { SIGN_UP } from '../utils/mutations';\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst Signup = () => {\r\n  const [formState, setFormState] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [signUp, { error, data }] = useMutation(SIGN_UP);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    setFormState({\r\n      ...formState,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    console.log(formState);\r\n\r\n    try {\r\n      const { data } = await signUp({\r\n        variables: { ...formState },\r\n      });\r\n\r\n      Auth.login(data.signUp.token);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <main className=\"flex-row justify-center mb-4\">\r\n      <div className=\"col-12 col-lg-10\">\r\n        <div className=\"card\">\r\n          <h4 className=\"card-header bg-dark text-light p-2\">Sign Up</h4>\r\n          <div className=\"card-body\">\r\n            {data ? (\r\n              <p>\r\n                Success! You may now head{' '}\r\n                <Link to=\"/\">back to the homepage.</Link>\r\n              </p>\r\n            ) : (\r\n              <form onSubmit={handleFormSubmit}>\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your username\"\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  value={formState.name}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"Your email\"\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  value={formState.email}\r\n                  onChange={handleChange}\r\n                />\r\n                <input\r\n                  className=\"form-input\"\r\n                  placeholder=\"******\"\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  value={formState.password}\r\n                  onChange={handleChange}\r\n                />\r\n                <button\r\n                  className=\"btn btn-block btn-primary\"\r\n                  style={{ cursor: 'pointer' }}\r\n                  type=\"submit\"\r\n                >\r\n                  Submit\r\n                </button>\r\n              </form>\r\n            )}\r\n\r\n            {error && (\r\n              <div className=\"my-3 p-3 bg-danger text-white\">\r\n                {error.message}\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import * as React from 'react';\r\nimport { ApolloClient, InMemoryCache, ApolloProvider, createHttpLink } from '@apollo/client';\r\nimport { setContext } from '@apollo/client/link/context';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\n\r\nimport Navbar from './components/Navbar';\r\nimport Footer from './components/Footer';\r\nimport Home from './pages/Home';\r\nimport Profile from './pages/Profile';\r\nimport { green, orange } from '@mui/material/colors';\r\nimport { ThemeProvider } from '@mui/private-theming';\r\nimport { Container, createTheme } from '@mui/material';\r\n\r\nimport './App.css';\r\nimport Auth from './utils/auth';\r\nimport SignIn from './pages/SignIn';\r\nimport SignUp from './pages/SignUp';\r\n\r\n\r\n// Construct our main GraphQL API endpoint\r\nconst httpLink = createHttpLink({\r\n  uri: '/api',\r\n});\r\n\r\nconst authLink = setContext((_, { headers }) => {\r\n  // get the authentication token from local storage if it exists\r\n  const token = Auth.getToken()\r\n  // return the headers to the context so httpLink can read them\r\n  return {\r\n    headers: {\r\n      ...headers,\r\n      authorization: token ? `Bearer ${token}` : '',\r\n    },\r\n  };\r\n});\r\n\r\nconst apolloClient = new ApolloClient({\r\n  link: authLink.concat(httpLink),\r\n  cache: new InMemoryCache(),\r\n});\r\n\r\nconst stanceTheme = createTheme({\r\n  typography: {\r\n    h6: {\r\n      fontSize: 36\r\n    }\r\n  },\r\n  palette:{\r\n    primary: {\r\n      main: green[400]\r\n    },\r\n    secondary: {\r\n      main: orange[300]\r\n    }\r\n  }\r\n})\r\n\r\nfunction App() {\r\n  return (\r\n    <ApolloProvider client={apolloClient}>\r\n      <ThemeProvider theme={stanceTheme}>\r\n        <Router>\r\n          <Navbar />\r\n            <Container >\r\n            <Route exact path=\"/\">\r\n                <Home />\r\n              </Route>\r\n              <Route exact path=\"/signin\">\r\n                <SignIn />\r\n              </Route>\r\n              <Route exact path=\"/signup\">\r\n                <SignUp />\r\n              </Route>\r\n              <Route exact path=\"/me\">\r\n                <Profile />\r\n              </Route>\r\n              <Route exact path=\"/profiles/:username\">\r\n                <Profile />\r\n              </Route>\r\n            </Container>\r\n          <Footer />\r\n        </Router>\r\n      </ThemeProvider>\r\n    </ApolloProvider>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}